#include <iostream>
#include <math.h>
#include<fstream>
#include<cstring>
#include <conio.h>
#include "windows.h"

using std::endl;
using std::cout;
using std::cin;
using std::ofstream;

struct horses
{
	int numb;
	int power;
	bool winner=false;
	int coef=0;
} ;
struct user
{
	char login[20];
	char password[20];
	bool admin= false;
	bool exist = true;
	struct myhorse
	{
		int bet = 0;
		int numb = 0;

	} horse;
	

};
void hashpass(user* person1)
{
	int a1=0;
	
	for (int i = 0; person1->password[i]!='\0'; i++)
	{
		
		a1 += person1->password[i];
		
	}
	int numb = 0;
	int a2 = a1;
	while (a2)
	{
		a2 /= 10;
		numb++;
	}int i = 0;
	for (i = 0; numb!= 0; i++)
	{
		if (numb >= 2)
		{
			a2 = a1 / pow(10, (numb - 1));
			person1->password[i] = a2 + 2*'0';
			a2 = pow(10, (numb - 1));
			a1 %= a2;
			numb--;
			
		}
		else if (numb == 1)
		{
			person1->password[i] = a1 + 2*'0';
			i++;
			break;
		}
	}
	person1->password[i] = '\0';
	
}
void changeuser(FILE* f1, char choice, user* fileperson)
{
	if (choice == '1')
	{
		system("cls");
		cout << "Enter new username" << endl;
		cin.getline(fileperson->login, 20);
		if (cin.fail())
		{
			cin.clear();
			cin.ignore();
		}
		
		fpos_t posi;
		int check = 0;
		fgetpos(f1, &posi);
		fseek(f1, 0, SEEK_SET);
		user fileperson2;
		while (!feof(f1))
		{
			fread(&fileperson2, sizeof(user), 1, f1);
			if (feof(f1))
				break;
			if (strcmp(fileperson2.login, fileperson->login) == 0)
			{
				check++;
				break;
			}
		}
		if (check == 0)
		{
			posi = posi - sizeof(user);
			fsetpos(f1,&posi);
			fwrite(fileperson, sizeof(user), 1, f1);
		}
		else cout << "This username is already in use" << endl;
		system("pause");
	}
	if (choice == '2')
	{
		system("cls");
		cout << "Enter new password" << endl;
		cin.getline(fileperson->password, 20);
		if (cin.fail())
		{
			cin.clear();
			cin.ignore();
		}
		
		hashpass(fileperson);
		int size = 0 - sizeof(user);
		fseek(f1, size, SEEK_CUR);
		fwrite(fileperson, sizeof(user), 1, f1);
	}
	if (choice == '3')
	{
		system("cls");
		cout << "Choose new flag" << endl;
		cout << "1.Exists\n2.Doesn't exist"<<endl;
			choice = _getch();
			if (choice == '1')
				fileperson->exist = true;
			else if (choice == '2')
				fileperson->exist = false;
		int size = 0 - sizeof(user);
		fseek(f1, size, SEEK_CUR);
		fwrite(fileperson, sizeof(user), 1, f1);
	}
	if (choice == '4')
	{
		system("cls");
		cout << "Choose admin rights status" << endl;
		cout << "1.Allowed\n2.Not allowed" << endl;
		choice = _getch();
		if (choice == '1')
			fileperson->admin = true;
		else if (choice == '2')
			fileperson->admin = false;
		int size = 0 - sizeof(user);
		fseek(f1, size, SEEK_CUR);
		fwrite(fileperson, sizeof(user), 1, f1);

	}
};
void findusers(FILE* f1)
{
	
	char choice='1';
	user fileperson;
	user person1;
	int count = 0;
	while (choice == '1') 
	{
		system("cls");
		cout << "Find user/s by: " << endl;
		cout << "1.Their login\n2.The horse they have bet on\n3.Flag of existence\n4.Exit\n";

		choice = _getch();
		switch (choice)
		{
		case('1'):
			system("cls");
			
			cout << "Enter login of the user you want to find:" << endl;
			cin.getline(person1.login, 20);
			if (cin.fail())
			{
				cin.clear();
				cin.ignore();
			}
			
			fseek(f1, 0, SEEK_SET);
			while (!feof(f1))
			{
				fread(&fileperson, sizeof(user), 1, f1);
				if (feof(f1))
					break;
				if (strcmp(person1.login, fileperson.login) == 0)
				{
					cout << "Login: "<<fileperson.login << endl;
					cout << "Password: "<<fileperson.password << endl;
					cout << "Flag of existence: "<<fileperson.exist << endl;
					cout << "Admin: " << fileperson.admin << endl;
					cout << "Horse: " << fileperson.horse.numb << endl;
					cout << "Bet: " << fileperson.horse.bet << endl;
					cout << "-----------" << endl;
					
					break;
				}
			}
			break;
		case('2'):
			system("cls");
			cout << "Enter the number of the horse: " << endl;
			cin >> person1.horse.numb;
			fseek(f1, 0, SEEK_SET);
			while (!feof(f1))
			{
				fread(&fileperson, sizeof(user), 1, f1);
				if (feof(f1))
					break;
				if (person1.horse.numb==fileperson.horse.numb)
				{
					cout << "Login: " << fileperson.login << endl;
					cout << "Password: " << fileperson.password << endl;
					cout << "Flag of existence: " << fileperson.exist << endl;
					cout << "Admin: " << fileperson.admin << endl;
					cout << "Horse: " << fileperson.horse.numb << endl;
					cout << "Bet: " << fileperson.horse.bet << endl;
					cout << "-----------" << endl;
					count++;
				}
				if (count == 5)
				{
					system("pause");
					cout << "Do you want to search for more users?\n1.Yes\n2.No\n";
					choice = _getch();
					if (choice == '2')
						break;
					else if (choice == '1')
						count == 0;
				}
			}
			system("cls");
			if (count == 0)
			{
				cout << "No users have been found by this parameter" << endl;
				system("pause");
			}
			break;
		case('3'):
			system("cls");

			cout << "Enter the flag of the user you want to find:\n1.does not exist\n2.exists" << endl;
			cin >> choice;
			if (choice == '1')
				person1.exist = false;
			else if (choice == '2')
				person1.exist = true;
			fseek(f1, 0, SEEK_SET);
			while (!feof(f1))
			{
				fread(&fileperson, sizeof(user), 1, f1);
				if (feof(f1))
					break;
				if (person1.exist ==fileperson.exist)
				{
					cout << "Login: " << fileperson.login << endl;
					cout << "Password: " << fileperson.password << endl;
					cout << "Flag of existence: " << fileperson.exist << endl;
					cout << "Admin: " << fileperson.admin << endl;
					cout << "Horse: " << fileperson.horse.numb << endl;
					cout << "Bet: " << fileperson.horse.bet << endl;
					cout << "-----------" << endl;
					count++;
				}
				if (count == 5)
				{
					system("pause");
					cout << "Do you want to search for more users?\n1.Yes\n2.No\n";
					choice = _getch();
					if (choice == '2')
						break;
					else if (choice == '1')
						count == 0;
				}
			}
			system("pause");
			system("cls");
			if (count == 0)
			{
				cout << "No users have been found by this parameter" << endl;
				system("pause");
			}
			break;
		case('4'):
			system("cls");
			break;
		}
		system("pause");
		system("cls");
		cout << "Do you want to continue searching?\n1.Yes\n2.No\n";
		choice = _getch();
	}
	
}
void menuadmin(FILE*f1)
{
	system("cls");
	int goback = 1;
	FILE* f2;
	fopen_s(&f2, "horses.txt", "r+b");
	char finduser[20];
	user fileperson;
	while (goback == 1) { //щоб повернутися назад САША ПРОЧИТАЙ ЦЕ ЛОЛ (будь ласка)
		system("cls");
		cout << "ADMIN MENU" << endl;
		cout << "1.Change user" << endl;
		cout << "2.Delete user" << endl;
		cout << "3.Change horses' characteristics" << endl;
		cout << "4.Find user" << endl;
		cout << "ESC.Exit" << endl;
		char choice;
		choice = _getch();
		int check = 0;
		switch (choice)
		{
		case('1'):
			system("cls");
			check = 0;
			cout << "Enter login of the user you want to change:" << endl;
			cin.getline(finduser, 20);
			if (cin.fail())
			{
				cin.clear();
				cin.ignore();
			}
			
			fseek(f1, 0, SEEK_SET);
			while (!feof(f1))
			{
				fread(&fileperson, sizeof(user), 1, f1);
				if (feof(f1))
					break;
				if (strcmp(finduser, fileperson.login) == 0)
				{

					cout << "What do you want to change?\n1.Login: " << fileperson.login << "\n2.Password: " << fileperson.password << endl;
					cout << "3.Flag of existence: " << fileperson.exist << "\n4.Admin rights: " << fileperson.admin<<endl;
					choice = _getch();
					changeuser(f1, choice, &fileperson);
					break;
				}
			}
			
			break;
		case('2'):
			system("cls");
			check = 0;
			cout << "Enter login of the user you want to delete:" << endl;
			cin.getline(finduser, 20);
			if (cin.fail())
			{
				cin.clear();
				cin.ignore();
			}
			
			fseek(f1, 0, SEEK_SET);
            while (!feof(f1))
			{
				fread(&fileperson, sizeof(user), 1, f1);
				if (feof(f1))
					break;
				if (strcmp(finduser, fileperson.login) == 0)
				{
					check++;
					fileperson.exist = false;
					int size = 0 - sizeof(user);
					fseek(f1, size, SEEK_CUR);
					fwrite(&fileperson, sizeof(user), 1, f1);
					break;
				}
			}
			if (check == 0)
			{
				system("cls");
				cout << "User has not been found" << endl;
			}
			break;
		case('3'):
			system("cls");
			choice = '0';
			check = 0;
			cout << "1. Change power\n2. Show horses' characteristics\nESC. exit\n";
			choice = _getch();
			system("cls");
			if (choice == '1')
			{
				horses racehorse;
				horses filehorse;
				cout << "Enter number of the horse" << endl;
				cin >> racehorse.numb;
				cout << "Enter the power of the horse" << endl;
				cin >> racehorse.power;
				fseek(f2, 0, SEEK_SET);
				while (!feof(f2)) 
				{
					fread(&filehorse, sizeof(horses), 1, f2);
					if (filehorse.numb == racehorse.numb) 
					{
						check++;
						break;
					}
				}
				if (check != 0)
				{
					fpos_t posi;
					fgetpos(f2, &posi);
					int size = 0 - sizeof(horses);
					fseek(f2, size, SEEK_CUR);
					fwrite(&racehorse, sizeof(horses), 1, f2);
					fsetpos(f2, &posi);
				}
				else if (check == 0) 
				{
					cout << "The horse have not been found" << endl;
					system("pause");
				}
			}
			if (choice == '2')
			{
				system("cls");
				cout << "Horses' characteristics: " << endl;
				fseek(f2, 0, SEEK_SET);
				horses filehorse;
				while (!feof(f2))
				{
					fread(&filehorse, sizeof(horses), 1, f2);
					if (feof(f2))
						break;
					cout << filehorse.numb << ". Power= " << filehorse.power <<"; coefficient= "<<filehorse.coef<<endl;
				}
				system("pause");
			}
			if (choice == '27')
				break;
			
				break;
		case('4'):
			findusers(f1);
			system("pause");
			break;
		case('27'):
			break;
			
		};
		system("cls");
		cout << "Do you want to return to the admin menu?\n1.yes\n2.no" << endl;
		choice = _getch();
		if (choice == '1')
			goback = 1;
		else goback = 0;
	}
	fclose(f2);
	
}
void menuuser(user*fileperson, FILE*f1)
{

	system("cls");
	int goback = 1;
	FILE* f2;
	fopen_s(&f2, "horses.txt", "r+b");

	while (goback == 1) {
		system("cls");
		cout << "USER MENU" << endl;
		cout << "1.To make a bet" << endl;
		cout << "ESC. To exit" << endl;
		char choice = _getch();
		int size = 0 - sizeof(user);
		switch (choice)
		{
		case('1'):
			system("cls");
			choice = '0';
			while (choice - '0' < 1 || choice - '0' > 5) {
				cout << "choose your horse (from 1 to 5)" << endl;
				fseek(f2, 0, SEEK_SET);
				horses filehorse;
				while (!feof(f2))
				{
					fread(&filehorse, sizeof(horses), 1, f2);
					if (feof(f2))
						break;
					cout << filehorse.numb << ". Power=" << filehorse.power << endl;
				}
				choice = _getch();
				if (choice - '0' < 1 && choice - '0' > 5)
					cout << "There is no horse for this number" << endl;
			}
			fileperson->horse.numb = choice - '0';
			cout << "Enter your bet" << endl;
			cin >> fileperson->horse.bet;
			fseek(f1, size, SEEK_CUR);
			fwrite(fileperson, sizeof(user), 1, f1);
			break;
		case ('27'):
			break;


		}
		cout << "Do you want to return to the user menu?\n1.yes\n2.no" << endl;
		choice = _getch();
		goback = choice - '0';
	}
	fclose(f2);

}
void menu1(FILE *f1)
{
	char adminpass[] = { "if`"};
	int check = 0;
	user person1, fileperson;
	cout << "1.Login \n2.Registrate\nESC. exit" << endl;
	char choice;
	choice = _getch();
	switch(choice)
	{

	case ('1'):
		while (choice != 27) {
			cout << "Enter your login and password:" << endl;
			cout << "Login: ";
			cin.getline(person1.login, 20);
			if (cin.fail())
			{
				cin.clear();
				cin.ignore();
			}
			
			cout << endl;
			cout << "Password: ";
			cin.getline(person1.password, 20);
			if (cin.fail())
			{
				cin.clear();
				cin.ignore();
			}
			
			hashpass(&person1);                                     //hash hash hash hash
			fseek(f1, 0, SEEK_SET);
			while (!feof(f1))
			{
				fread(&fileperson, sizeof(user), 1, f1);
				if (feof(f1)) break;
				if (strcmp(fileperson.login, person1.login) == 0 && fileperson.exist==true)
				{
					check++;
					break;
				}
			}
			if (check != 0)
			{
				
				if (strcmp(fileperson.password, person1.password) == 0)
				{
					system("cls");
					cout << "You have successfully logged in" << endl;
					if (fileperson.admin == true)
					{
						menuadmin(f1);
						/*fclose(f1);*/
					}
					else if (fileperson.admin == false)
					{
						menuuser(&fileperson,f1);
						/*fclose(f1);*/
					}
					break;

				}
				else
				{
					system("cls");
					cout << "ERROR: passwords do not match\nIf you want to try again press Y, or else press ESC to exit" << endl;
					choice = _getch();
				}

			}
			else
			{
				system("cls");
				cout << "ERROR: user has not been found\nIf you want to try again press Y, else press ESC to exit" << endl;
				choice = _getch();
			}

		}
		break;

	case ('2'):
		
		while (choice != 27) 
		{
			
				system("cls");
				cout << "Enter your login and password:" << endl;
				cout << "Login: ";
				
				cin.getline(person1.login,20);
				if (cin.fail())
				{
					cin.clear();
					cin.ignore();
				}
				cout << endl;
			
			cout << "Password: ";
			cin.getline(person1.password, 20);
			if (cin.fail())
			{
				cin.clear();
				cin.ignore();
			}
			cout << endl;
			hashpass(&person1);
			if (strcmp(adminpass,person1.password) == 0)
				person1.admin = true;
			fseek(f1, 0, SEEK_SET);
			
			while (!feof(f1))
			{
				fread(&fileperson, sizeof(user), 1, f1);
				if (strcmp(fileperson.login, person1.login) == 0)
				{
					cout << "ERROR: This user already exists" << endl;
					fseek(f1, 0, SEEK_SET);
					check++;
					break;
				}

			}
			fpos_t posi;
			if (check == 0)
			{
				fseek(f1, 0, SEEK_SET);
					while(!feof(f1))
					{ 
						fread(&fileperson, sizeof(user), 1, f1);
						if (fileperson.exist == false)
					    { 
							fgetpos(f1,&posi);                         //check
							int size = 0 - sizeof(user);
							fseek(f1, size, SEEK_CUR);
							fwrite(&person1, sizeof(user), 1, f1);
							fsetpos(f1, &posi);                        //check
							check++;
							/*fclose(f1);*/
							break;
					    }  
					}
					if (check == 0) 
					{
						fseek(f1, 0, SEEK_END);
						fwrite(&person1, sizeof(user), 1, f1);
						/*fclose(f1);*/
					}
					check = 0;
				break;
			}
			else if (check != 0)
			{
				cout << "Do you want to try again? Press Y if you do, otherwise press ESC" << endl;
				choice = _getch();
			};

			
		}
		

		break;
	default:
		break;

	}
}
void contest(FILE*f1)
{
	
	FILE* f2;
	fopen_s(&f2, "horses.txt", "r+b");
	horses horse;
	system("cls");
	cout << "A contest" << endl;
	fpos_t posi;
	int maxnumb =0, maxpower =0,numb =0,power =0,coef =0;
	srand(time(NULL));
	fseek(f2, 0, SEEK_SET);
	int sizehorse = 0 - sizeof(horses);
	int sizeperson = 0 - sizeof(user);
	while (!feof(f2))
	{
		
		fread(&horse, sizeof(horses), 1, f2);
			if (feof(f2))
				break;
			coef = rand() % 10 + 1;
			if (horse.power * coef > maxpower)
			{
				maxnumb = horse.numb;
				maxpower = horse.power * coef;
			}
			horse.coef = coef;
			fgetpos(f2, &posi);
			fseek(f2, sizehorse, SEEK_CUR);
			fwrite(&horse, sizeof(horses), 1, f2);
			fsetpos(f2, &posi);
	}
	
	fseek(f2, 0, SEEK_SET);
	cout << "And the winner/s is/are..." << endl;
	user fileperson;
	while (!feof(f2))
	{
		fread(&horse, sizeof(horses), 1, f2);
		if (feof(f2))
			break;
		if (horse.power * horse.coef == maxpower)
		{
			horse.winner = true;
			fgetpos(f2, &posi);
			fseek(f2, sizehorse, SEEK_CUR);
			fwrite(&horse, sizeof(horses), 1, f2);
			fsetpos(f2, &posi);
			Sleep(4000);
			cout << "Horse number " << horse.numb << endl;

			
			fseek(f1, 0, SEEK_SET);

			while (!feof(f1))
			{
				fread(&fileperson, sizeof(user), 1, f1);             
				if (feof(f1))
					break;
				if (fileperson.horse.numb == horse.numb && fileperson.exist==true)
				{
					fileperson.horse.bet = fileperson.horse.bet * 2;
					fgetpos(f1, &posi);
					fseek(f1, sizeperson, SEEK_CUR);					
					fwrite(&fileperson, sizeof(user), 1, f1); 
					fsetpos(f1, &posi);                            
				}
			}

		}
		else if (horse.power * horse.coef != maxpower)
		{
			horse.winner = false;
			fgetpos(f2, &posi);
			fseek(f2, sizehorse, SEEK_CUR);
			fwrite(&horse, sizeof(horses), 1, f2);
			fsetpos(f2, &posi);

			fseek(f1, 0, SEEK_SET);

			while (!feof(f1))
			{
				fread(&fileperson, sizeof(user), 1, f1);
				if (feof(f1))
					break;
				if (fileperson.horse.numb == horse.numb && fileperson.exist==true)
				{
					fileperson.horse.bet = 0;
					fgetpos(f1, &posi);
					fseek(f1, sizeperson, SEEK_CUR);
					fwrite(&fileperson, sizeof(user), 1, f1);
					fsetpos(f1, &posi);
				}
			}
		}
		
	};
	ofstream outf;
	outf.open("resultslist.txt", ofstream::app);
	  SYSTEMTIME st;
	  GetSystemTime(&st);
	  
	fseek(f2, 0, SEEK_SET);
	while (!feof(f2))
	{
		fread(&horse, sizeof(horses), 1, f2);
		if (feof(f2))
			break;
		if (horse.winner == true)
		{
			char line[20];
			outf << st.wDay << "." << st.wMonth << "." << st.wYear << " The number of the horse: " << horse.numb << " The power of the horse: " << horse.power << " Coefficient: " << horse.coef << endl;


		}

	}
	fclose(f2);
	outf.close();
	system("pause");
}
int main() {
	
	user fileperson;
	FILE* f1;
	fopen_s(&f1, "users.txt", "r+b");
	menu1(f1);
	fpos_t posi;
	char choice;
	system("cls");
	cout << "Do you want to start a contest?\n1.yes\n2.no" << endl;
	choice = _getch();
	system("cls");
	if(choice=='1')
	contest(f1);
	system("cls");
	fseek(f1, 0, SEEK_SET);
	while (!feof(f1))
	{
		fread(&fileperson, sizeof(user), 1, f1);
		if (feof(f1))
			break;
		cout << "Login: " << fileperson.login << endl;
		cout << "Password: " << fileperson.password << endl;
		cout << "Flag of existence: " << fileperson.exist << endl;
		cout << "Admin: " << fileperson.admin << endl;
		cout << "Horse: " << fileperson.horse.numb << endl;
		cout << "Bet: " << fileperson.horse.bet << endl;
		cout << "-----------" << endl;
	}
	fclose(f1);
	return 0;
}
